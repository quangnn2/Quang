#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyMuaBanSach
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quanlymuabansach")]
	public partial class QuanlysachDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertchiTietBan(chiTietBan instance);
    partial void UpdatechiTietBan(chiTietBan instance);
    partial void DeletechiTietBan(chiTietBan instance);
    partial void InsertkhachHang(khachHang instance);
    partial void UpdatekhachHang(khachHang instance);
    partial void DeletekhachHang(khachHang instance);
    partial void InsertchiTietNhap(chiTietNhap instance);
    partial void UpdatechiTietNhap(chiTietNhap instance);
    partial void DeletechiTietNhap(chiTietNhap instance);
    partial void InsertnhaCungCap(nhaCungCap instance);
    partial void UpdatenhaCungCap(nhaCungCap instance);
    partial void DeletenhaCungCap(nhaCungCap instance);
    partial void Insertsach(sach instance);
    partial void Updatesach(sach instance);
    partial void Deletesach(sach instance);
    partial void InserttacGia(tacGia instance);
    partial void UpdatetacGia(tacGia instance);
    partial void DeletetacGia(tacGia instance);
    partial void InserttheLoai(theLoai instance);
    partial void UpdatetheLoai(theLoai instance);
    partial void DeletetheLoai(theLoai instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public QuanlysachDataContext() : 
				base(global::QuanLyMuaBanSach.Properties.Settings.Default.QuanlymuabansachConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanlysachDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanlysachDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanlysachDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanlysachDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<chiTietBan> chiTietBans
		{
			get
			{
				return this.GetTable<chiTietBan>();
			}
		}
		
		public System.Data.Linq.Table<khachHang> khachHangs
		{
			get
			{
				return this.GetTable<khachHang>();
			}
		}
		
		public System.Data.Linq.Table<chiTietNhap> chiTietNhaps
		{
			get
			{
				return this.GetTable<chiTietNhap>();
			}
		}
		
		public System.Data.Linq.Table<nhaCungCap> nhaCungCaps
		{
			get
			{
				return this.GetTable<nhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<sach> saches
		{
			get
			{
				return this.GetTable<sach>();
			}
		}
		
		public System.Data.Linq.Table<tacGia> tacGias
		{
			get
			{
				return this.GetTable<tacGia>();
			}
		}
		
		public System.Data.Linq.Table<theLoai> theLoais
		{
			get
			{
				return this.GetTable<theLoai>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<V_Tonkho> V_Tonkhos
		{
			get
			{
				return this.GetTable<V_Tonkho>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chiTietBan")]
	public partial class chiTietBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MaSach;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _IDKhachHang;
		
		private System.Nullable<double> _Gia;
		
		private System.Nullable<System.DateTime> _NgayBan;
		
		private EntityRef<khachHang> _khachHang;
		
		private EntityRef<sach> _sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnIDKhachHangChanging(System.Nullable<int> value);
    partial void OnIDKhachHangChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnNgayBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBanChanged();
    #endregion
		
		public chiTietBan()
		{
			this._khachHang = default(EntityRef<khachHang>);
			this._sach = default(EntityRef<sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NVarChar(50)")]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int")]
		public System.Nullable<int> IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._khachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khachHang_chiTietBan", Storage="_khachHang", ThisKey="IDKhachHang", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public khachHang khachHang
		{
			get
			{
				return this._khachHang.Entity;
			}
			set
			{
				khachHang previousValue = this._khachHang.Entity;
				if (((previousValue != value) 
							|| (this._khachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._khachHang.Entity = null;
						previousValue.chiTietBans.Remove(this);
					}
					this._khachHang.Entity = value;
					if ((value != null))
					{
						value.chiTietBans.Add(this);
						this._IDKhachHang = value.ID;
					}
					else
					{
						this._IDKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("khachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sach_chiTietBan", Storage="_sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true, DeleteRule="CASCADE")]
		public sach sach
		{
			get
			{
				return this._sach.Entity;
			}
			set
			{
				sach previousValue = this._sach.Entity;
				if (((previousValue != value) 
							|| (this._sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sach.Entity = null;
						previousValue.chiTietBans.Remove(this);
					}
					this._sach.Entity = value;
					if ((value != null))
					{
						value.chiTietBans.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.khachHang")]
	public partial class khachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenKhachHang;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<int> _SoDienthoai;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private EntitySet<chiTietBan> _chiTietBans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienthoaiChanging(System.Nullable<int> value);
    partial void OnSoDienthoaiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public khachHang()
		{
			this._chiTietBans = new EntitySet<chiTietBan>(new Action<chiTietBan>(this.attach_chiTietBans), new Action<chiTietBan>(this.detach_chiTietBans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(50)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienthoai", DbType="Int")]
		public System.Nullable<int> SoDienthoai
		{
			get
			{
				return this._SoDienthoai;
			}
			set
			{
				if ((this._SoDienthoai != value))
				{
					this.OnSoDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienthoai = value;
					this.SendPropertyChanged("SoDienthoai");
					this.OnSoDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khachHang_chiTietBan", Storage="_chiTietBans", ThisKey="ID", OtherKey="IDKhachHang")]
		public EntitySet<chiTietBan> chiTietBans
		{
			get
			{
				return this._chiTietBans;
			}
			set
			{
				this._chiTietBans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chiTietBans(chiTietBan entity)
		{
			this.SendPropertyChanging();
			entity.khachHang = this;
		}
		
		private void detach_chiTietBans(chiTietBan entity)
		{
			this.SendPropertyChanging();
			entity.khachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chiTietNhap")]
	public partial class chiTietNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _IDNhaCungCap;
		
		private string _MaSach;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _Gia;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private EntityRef<nhaCungCap> _nhaCungCap;
		
		private EntityRef<sach> _sach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnIDNhaCungCapChanging(System.Nullable<int> value);
    partial void OnIDNhaCungCapChanged();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    #endregion
		
		public chiTietNhap()
		{
			this._nhaCungCap = default(EntityRef<nhaCungCap>);
			this._sach = default(EntityRef<sach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhaCungCap", DbType="Int")]
		public System.Nullable<int> IDNhaCungCap
		{
			get
			{
				return this._IDNhaCungCap;
			}
			set
			{
				if ((this._IDNhaCungCap != value))
				{
					if (this._nhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._IDNhaCungCap = value;
					this.SendPropertyChanged("IDNhaCungCap");
					this.OnIDNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NVarChar(50)")]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nhaCungCap_chiTietNhap", Storage="_nhaCungCap", ThisKey="IDNhaCungCap", OtherKey="ID", IsForeignKey=true)]
		public nhaCungCap nhaCungCap
		{
			get
			{
				return this._nhaCungCap.Entity;
			}
			set
			{
				nhaCungCap previousValue = this._nhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._nhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nhaCungCap.Entity = null;
						previousValue.chiTietNhaps.Remove(this);
					}
					this._nhaCungCap.Entity = value;
					if ((value != null))
					{
						value.chiTietNhaps.Add(this);
						this._IDNhaCungCap = value.ID;
					}
					else
					{
						this._IDNhaCungCap = default(Nullable<int>);
					}
					this.SendPropertyChanged("nhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sach_chiTietNhap", Storage="_sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true, DeleteRule="CASCADE")]
		public sach sach
		{
			get
			{
				return this._sach.Entity;
			}
			set
			{
				sach previousValue = this._sach.Entity;
				if (((previousValue != value) 
							|| (this._sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sach.Entity = null;
						previousValue.chiTietNhaps.Remove(this);
					}
					this._sach.Entity = value;
					if ((value != null))
					{
						value.chiTietNhaps.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("sach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nhaCungCap")]
	public partial class nhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenNhaCungCap;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<int> _SoDienThoai;
		
		private EntitySet<chiTietNhap> _chiTietNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(System.Nullable<int> value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public nhaCungCap()
		{
			this._chiTietNhaps = new EntitySet<chiTietNhap>(new Action<chiTietNhap>(this.attach_chiTietNhaps), new Action<chiTietNhap>(this.detach_chiTietNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(50)")]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Int")]
		public System.Nullable<int> SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nhaCungCap_chiTietNhap", Storage="_chiTietNhaps", ThisKey="ID", OtherKey="IDNhaCungCap")]
		public EntitySet<chiTietNhap> chiTietNhaps
		{
			get
			{
				return this._chiTietNhaps;
			}
			set
			{
				this._chiTietNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chiTietNhaps(chiTietNhap entity)
		{
			this.SendPropertyChanging();
			entity.nhaCungCap = this;
		}
		
		private void detach_chiTietNhaps(chiTietNhap entity)
		{
			this.SendPropertyChanging();
			entity.nhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sach")]
	public partial class sach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSach;
		
		private string _TenSach;
		
		private System.Nullable<int> _IDTacGia;
		
		private System.Nullable<int> _IDTheLoai;
		
		private EntitySet<chiTietBan> _chiTietBans;
		
		private EntitySet<chiTietNhap> _chiTietNhaps;
		
		private EntityRef<tacGia> _tacGia;
		
		private EntityRef<theLoai> _theLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnIDTacGiaChanging(System.Nullable<int> value);
    partial void OnIDTacGiaChanged();
    partial void OnIDTheLoaiChanging(System.Nullable<int> value);
    partial void OnIDTheLoaiChanged();
    #endregion
		
		public sach()
		{
			this._chiTietBans = new EntitySet<chiTietBan>(new Action<chiTietBan>(this.attach_chiTietBans), new Action<chiTietBan>(this.detach_chiTietBans));
			this._chiTietNhaps = new EntitySet<chiTietNhap>(new Action<chiTietNhap>(this.attach_chiTietNhaps), new Action<chiTietNhap>(this.detach_chiTietNhaps));
			this._tacGia = default(EntityRef<tacGia>);
			this._theLoai = default(EntityRef<theLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(50)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTacGia", DbType="Int")]
		public System.Nullable<int> IDTacGia
		{
			get
			{
				return this._IDTacGia;
			}
			set
			{
				if ((this._IDTacGia != value))
				{
					if (this._tacGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTacGiaChanging(value);
					this.SendPropertyChanging();
					this._IDTacGia = value;
					this.SendPropertyChanged("IDTacGia");
					this.OnIDTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTheLoai", DbType="Int")]
		public System.Nullable<int> IDTheLoai
		{
			get
			{
				return this._IDTheLoai;
			}
			set
			{
				if ((this._IDTheLoai != value))
				{
					if (this._theLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDTheLoai = value;
					this.SendPropertyChanged("IDTheLoai");
					this.OnIDTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sach_chiTietBan", Storage="_chiTietBans", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<chiTietBan> chiTietBans
		{
			get
			{
				return this._chiTietBans;
			}
			set
			{
				this._chiTietBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sach_chiTietNhap", Storage="_chiTietNhaps", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<chiTietNhap> chiTietNhaps
		{
			get
			{
				return this._chiTietNhaps;
			}
			set
			{
				this._chiTietNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tacGia_sach", Storage="_tacGia", ThisKey="IDTacGia", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tacGia tacGia
		{
			get
			{
				return this._tacGia.Entity;
			}
			set
			{
				tacGia previousValue = this._tacGia.Entity;
				if (((previousValue != value) 
							|| (this._tacGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tacGia.Entity = null;
						previousValue.saches.Remove(this);
					}
					this._tacGia.Entity = value;
					if ((value != null))
					{
						value.saches.Add(this);
						this._IDTacGia = value.ID;
					}
					else
					{
						this._IDTacGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("tacGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theLoai_sach", Storage="_theLoai", ThisKey="IDTheLoai", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public theLoai theLoai
		{
			get
			{
				return this._theLoai.Entity;
			}
			set
			{
				theLoai previousValue = this._theLoai.Entity;
				if (((previousValue != value) 
							|| (this._theLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._theLoai.Entity = null;
						previousValue.saches.Remove(this);
					}
					this._theLoai.Entity = value;
					if ((value != null))
					{
						value.saches.Add(this);
						this._IDTheLoai = value.ID;
					}
					else
					{
						this._IDTheLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("theLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chiTietBans(chiTietBan entity)
		{
			this.SendPropertyChanging();
			entity.sach = this;
		}
		
		private void detach_chiTietBans(chiTietBan entity)
		{
			this.SendPropertyChanging();
			entity.sach = null;
		}
		
		private void attach_chiTietNhaps(chiTietNhap entity)
		{
			this.SendPropertyChanging();
			entity.sach = this;
		}
		
		private void detach_chiTietNhaps(chiTietNhap entity)
		{
			this.SendPropertyChanging();
			entity.sach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tacGia")]
	public partial class tacGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenTacGia;
		
		private EntitySet<sach> _saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenTacGiaChanging(string value);
    partial void OnTenTacGiaChanged();
    #endregion
		
		public tacGia()
		{
			this._saches = new EntitySet<sach>(new Action<sach>(this.attach_saches), new Action<sach>(this.detach_saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTacGia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTacGia
		{
			get
			{
				return this._TenTacGia;
			}
			set
			{
				if ((this._TenTacGia != value))
				{
					this.OnTenTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TenTacGia = value;
					this.SendPropertyChanged("TenTacGia");
					this.OnTenTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tacGia_sach", Storage="_saches", ThisKey="ID", OtherKey="IDTacGia")]
		public EntitySet<sach> saches
		{
			get
			{
				return this._saches;
			}
			set
			{
				this._saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_saches(sach entity)
		{
			this.SendPropertyChanging();
			entity.tacGia = this;
		}
		
		private void detach_saches(sach entity)
		{
			this.SendPropertyChanging();
			entity.tacGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.theLoai")]
	public partial class theLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TheLoai;
		
		private EntitySet<sach> _saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTheLoaiChanging(string value);
    partial void OnTheLoaiChanged();
    #endregion
		
		public theLoai()
		{
			this._saches = new EntitySet<sach>(new Action<sach>(this.attach_saches), new Action<sach>(this.detach_saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theLoai_sach", Storage="_saches", ThisKey="ID", OtherKey="IDTheLoai")]
		public EntitySet<sach> saches
		{
			get
			{
				return this._saches;
			}
			set
			{
				this._saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_saches(sach entity)
		{
			this.SendPropertyChanging();
			entity.theLoai = this;
		}
		
		private void detach_saches(sach entity)
		{
			this.SendPropertyChanging();
			entity.theLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenHienThi;
		
		private string _TenDangNhap;
		
		private string _PassWord;
		
		private string _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenHienThiChanging(string value);
    partial void OnTenHienThiChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHienThi", DbType="NVarChar(50)")]
		public string TenHienThi
		{
			get
			{
				return this._TenHienThi;
			}
			set
			{
				if ((this._TenHienThi != value))
				{
					this.OnTenHienThiChanging(value);
					this.SendPropertyChanging();
					this._TenHienThi = value;
					this.SendPropertyChanged("TenHienThi");
					this.OnTenHienThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(MAX)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(50)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Tonkho")]
	public partial class V_Tonkho
	{
		
		private string _MaSach;
		
		private string _TenSach;
		
		private System.Nullable<int> _tn;
		
		private System.Nullable<int> _tx;
		
		private System.Nullable<int> _Ton;
		
		public V_Tonkho()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this._MaSach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(50)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this._TenSach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tn", DbType="Int")]
		public System.Nullable<int> tn
		{
			get
			{
				return this._tn;
			}
			set
			{
				if ((this._tn != value))
				{
					this._tn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tx", DbType="Int")]
		public System.Nullable<int> tx
		{
			get
			{
				return this._tx;
			}
			set
			{
				if ((this._tx != value))
				{
					this._tx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ton", DbType="Int")]
		public System.Nullable<int> Ton
		{
			get
			{
				return this._Ton;
			}
			set
			{
				if ((this._Ton != value))
				{
					this._Ton = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
